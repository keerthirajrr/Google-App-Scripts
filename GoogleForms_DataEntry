function doGet() {
  return HtmlService.createHtmlOutputFromFile('upload');
}

function processExcelData(fileBlob) {
  try {
    var data = Utilities.newBlob(fileBlob).getDataAsString();
    var rows = Utilities.parseCsv(data);

    var formURL = "https://docs.google.com/forms/d/[FormId]/formResponse"; // Replace [FormId]

    var headers = rows[0].map(h => h.trim());
    var empNameIndex = headers.indexOf("Emp_Name");
    var empIDIndex = headers.indexOf("Emp_ID");
    var designationIndex = headers.indexOf("Designation");
    var teamIndex = headers.indexOf("Team");

    if ([empNameIndex, empIDIndex, designationIndex, teamIndex].includes(-1)) {
      throw new Error("Missing one or more required headers.");
    }

    for (var i = 1; i < rows.length; i++) {
      var empid = rows[i][empIDIndex].trim();
      var empname = rows[i][empNameIndex].trim();
      var designation = rows[i][designationIndex].trim();
      var team = rows[i][teamIndex].trim();

      var formPayload = {
        "entry.1710004207": empid,
        "entry.261210370": empname,
        "entry.630241216": designation,
        "entry.2133663420": team
      };

      var options = {
        "method": "post",
        "payload": formPayload
      };

      var response = UrlFetchApp.fetch(formURL, options);
      Logger.log("Response for row " + i + ": " + response.getResponseCode());

      Utilities.sleep(500); // Delay to avoid form rate limiting
    }

    return "Success";
  } catch (error) {
    Logger.log("Error: " + error.toString());
    return "Failed";
  }
}
